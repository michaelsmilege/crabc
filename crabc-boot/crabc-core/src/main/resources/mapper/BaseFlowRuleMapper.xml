<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.crabc.core.app.mapper.BaseFlowRuleMapper">

    <select id="selectFlows" resultType="cn.crabc.core.app.entity.BaseFlowRule">
        SELECT
            a.api_id,
            a.api_path,
            r.unit_time,
            r.flow_count
        FROM
            base_flow_api f
                join base_flow_rule r on
                f.flow_id = r.flow_id
                join base_api_info a on
                a.api_id = f.api_id
        WHERE a.api_status ='release'
    </select>

    <select id="selectList" resultType="cn.crabc.core.app.entity.BaseFlowRule">
        SELECT
            r.flow_id,
            r.flow_name,
            r.flow_count,
            flow_grade,
            (SELECT count(1) from base_flow_api a WHERE a.flow_id  = r.flow_id) apiCount,
            r.unit_time,
            r.flow_type,
            r.update_time
        FROM
            base_flow_rule r where flow_type = 'flow'
        <if test="flowName != null and flowName !=''">
            and r.flow_name like concat('%',#{flowName},'%')
        </if>
    </select>

    <select id="selectGroupApi" resultType="cn.crabc.core.app.entity.vo.GroupApiVO">
        SELECT
            a.api_id,
            a.api_name,
            a.group_id,
            g.group_name,
            g.parent_id
        FROM
            base_flow_api f
            join base_api_info a on
            f.api_id = a.api_id
        JOIN base_group g on a.group_id = g.group_id
        WHERE a.api_status ='release'
        and f.flow_id = #{flowId}
    </select>


    <insert id="insert" useGeneratedKeys="true" keyProperty="flowId" parameterType="cn.crabc.core.app.entity.BaseFlowRule">
        insert into base_flow_rule(flow_name,flow_grade,unit_time,flow_count,flow_type,create_time,create_by,update_time
        )values(#{flowName},#{flowGrade},#{unitTime},#{flowCount},#{flowType},#{createTime},#{createBy},#{updateTime})
    </insert>

    <update id="update" parameterType="cn.crabc.core.app.entity.BaseFlowRule">
        UPDATE base_flow_rule
        <set>
            flow_name = #{flowName},
            flow_count = #{flowCount},
            flow_type = #{flowType},
            unit_time = #{unitTime},
            update_by = #{updateBy},
            update_time =#{updateTime}
        </set>
        WHERE flow_id = #{flowId}
    </update>
    <delete id="delete">
        delete from base_flow_rule where  flow_id=#{flowId}
    </delete>

    <insert id="insertFlowApi">
        insert into base_flow_api (flow_id,api_id,create_by,create_time)
        values
        <foreach collection="list" item="apiId" separator=",">
            (#{flowId},#{apiId},#{userId},now())
        </foreach>
    </insert>

    <delete id="deleteFlowApi">
        delete from base_flow_api where  flow_id=#{flowId}
    </delete>
</mapper>